{"version":3,"file":"index.modern.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport styles from './styles.module.css'\nimport { useForm } from \"react-hook-form\";\n\ninterface Props {\n  text: string\n}\n\nexport const ExampleComponent = ({ text }: Props) => {\n  const [count, setCount] = React.useState(0);\n  return <div className={styles.test}>Example Component: {text} {count}\n    <button onClick={() =>  {\n      setCount(count +1)\n    }}>CLICK</button>\n  </div>\n}\n\nexport const ReactTable = () => {\n  const { register, handleSubmit, watch, formState: { errors } } = useForm();\n  const onSubmit = (data: any) => console.log(data);\n\n  console.log(watch(\"example\")); // watch input value by passing the name of it\n\n  return (\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {/* register your input into the hook by invoking the \"register\" function */}\n      <input defaultValue=\"test\" {...register(\"example\")} />\n      \n      {/* include validation with required or other standard HTML validation rules */}\n      <input {...register(\"exampleRequired\", { required: true })} />\n      {/* errors will return when field validation fails  */}\n      {errors.exampleRequired && <span>This field is required</span>}\n      \n      <input type=\"submit\" />\n    </form>\n  );\n}\n"],"names":["ExampleComponent","text","React","count","setCount","className","styles","test","onClick","ReactTable","useForm","register","handleSubmit","watch","errors","formState","onSubmit","data","console","log","defaultValue","required","exampleRequired","type"],"mappings":";;;;;IAQaA,gBAAgB,GAAG,SAAnBA,gBAAmB;MAAGC,YAAAA;;AACjC,wBAA0BC,QAAA,CAAe,CAAf,CAA1B;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,SAAOF,aAAA,MAAA;AAAKG,IAAAA,SAAS,EAAEC,MAAM,CAACC;GAAvB,uBAAA,EAAiDN,IAAjD,KAAA,EAAwDE,KAAxD,EACLD,aAAA,SAAA;AAAQM,IAAAA,OAAO,EAAE;AACfJ,MAAAA,QAAQ,CAACD,KAAK,GAAE,CAAR,CAAR;AACD;GAFD,SAAA,CADK,CAAP;AAKD,CAPM;AASP,IAAaM,UAAU,GAAG,SAAbA,UAAa;AACxB,iBAAiEC,OAAO,EAAxE;AAAA,MAAQC,QAAR,YAAQA,QAAR;AAAA,MAAkBC,YAAlB,YAAkBA,YAAlB;AAAA,MAAgCC,KAAhC,YAAgCA,KAAhC;AAAA,MAAoDC,MAApD,YAAuCC,SAAvC,CAAoDD,MAApD;;AACA,MAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD;AAAA,WAAeC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAf;AAAA,GAAjB;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAAC,SAAD,CAAjB;AAEA,SAEEX,aAAA,OAAA;AAAMc,IAAAA,QAAQ,EAAEJ,YAAY,CAACI,QAAD;GAA5B,EAEEd,aAAA,QAAA;AAAOkB,IAAAA,YAAY,EAAC;KAAWT,QAAQ,CAAC,SAAD,EAAvC,CAFF,EAKET,aAAA,QAAA,oBAAWS,QAAQ,CAAC,iBAAD,EAAoB;AAAEU,IAAAA,QAAQ,EAAE;AAAZ,GAApB,EAAnB,CALF,EAOGP,MAAM,CAACQ,eAAP,IAA0BpB,aAAA,OAAA,MAAA,0BAAA,CAP7B,EASEA,aAAA,QAAA;AAAOqB,IAAAA,IAAI,EAAC;GAAZ,CATF,CAFF;AAcD,CApBM;;;;"}